pipeline {
    agent any

    environment {
       FAST_API_SERVICE = "fast-api-service"
       FAST_API_CONTAINER = "fast-api-container"

       ALEMBIC_SERVICE = "alembic_runner"
       ALEMBIC_CONTAINER = "alembic-container"

       ENV_FILE = ".env.prod"
    }

    stages {

        stage('Checkout') {
            steps {
                git 'https://github.com/raison-collab/TutorialServiceFastAPI.git'
            }
        }

//        stage('Test') {
//            steps {
//                script {
//                    docker.image(FAST_API_SERVICE).inside {
//                        sh 'pytest'
//                    }
//                }
//            }
//        }

        stage('Deploy') {
           steps {
               script {
                   // Остановка и удаление старого контейнера
                   sh """
                   echo("stopping and removing containers")
                   docker stop ${FAST_API_CONTAINER} ${ALEMBIC_CONTAINER} // сделать контейнеры
                   docker rm -f ${FAST_API_CONTAINER} ${ALEMBIC_CONTAINER}

                   echo("building new image")
                   docker-compose --env-file ${ENV_FILE} build ${FAST_API_SERVICE} ${ALEMBIC_SERVICE}

                   echo("starting new containers")
                   docker-compose --env-file ${ENV_FILE} up -d --no-deps --force-recreate ${ALEMBIC_SERVICE}
                   docker-compose --env-file ${ENV_FILE} up -d --no-deps --force-recreate ${FAST_API_SERVICE}
                   """
               }
           }
        }
    }

    post {
       always {
           cleanWs()
       }
    }
}