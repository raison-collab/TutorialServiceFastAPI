pipeline {
    agent any

    environment {
       FAST_API_SERVICE = "fast-api-service"
       FAST_API_CONTAINER = "fast-api-container"

       ALEMBIC_SERVICE = "alembic_runner"
       ALEMBIC_CONTAINER = "alembic-container"

       ENV_FILE = ".env.prod"

       DOCKER_NETWORK = "services_network"
    }

    stages {

        stage('Checkout') {
            steps {
                git 'https://github.com/raison-collab/TutorialServiceFastAPI.git'
            }
        }

//        stage('Test') {
//            steps {
//                script {
//                    docker.image(FAST_API_SERVICE).inside {
//                        sh 'pytest'
//                    }
//                }
//            }
//        }

        stage('Deploy') {
           steps {
               script {
                   // Остановка и удаление старого контейнера
                   sh """
                   docker stop ${FAST_API_CONTAINER} ${ALEMBIC_CONTAINER}
                   docker rm -f ${FAST_API_CONTAINER} ${ALEMBIC_CONTAINER}

                   docker compose --env-file $ENV_FILE build $FAST_API_SERVICE $ALEMBIC_SERVICE

                   docker run --name alembic-container \
                        --env-file .env.prod \
                        --network ${DOCKER_NETWORK} \
                        -d fast-api:latest /bin/sh ./docker/alembic.sh

                   docker run --name fast-api-container \
                       --env-file .env.prod \
                       -p 8887:8887 \
                       --network ${DOCKER_NETWORK} \
                       -d fast-api:latest python3.12 -m uvicorn main:app --host 0.0.0.0 --port 8887
                   """
               }
           }
        }
    }

    post {
       always {
           cleanWs()
       }
    }
}